# -*- coding: utf-8 -*-
"""Data Visualization.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yGSDUpgGTv4uRq7eG6JQvPwOsNh0jk4k
"""

from google.colab import files
uploaded = files.upload()

import pandas as pd

april = pd.read_excel('Book_Sales_April.xlsx')

may = pd.read_excel('Book_Sales_May.xlsx')

june = pd.read_excel('Book_Sales_June.xlsx')

april.head()

april.info()

may.info()

june.info()

df = pd.concat([april, may, june], ignore_index=False)

df.head()

df.dtypes

df.isna().sum()

df['Month'] = df['Purchase Date'].dt.month

df.head()

df['Year'] = df['Purchase Date'].dt.year
df.head()

df['Year'].value_counts()

df['Month'].value_counts()

df['Audience'].value_counts()

df['Genre'].value_counts()

df['Purchase Location'].value_counts()

df.drop('Purchase Date', axis =1, inplace = True)

df.head()

performance = df.groupby(['Month', 'Book'])['Price'].sum()
performance

performance = df.groupby(['Month', 'Genre'])['Price'].sum()
performance

df.head()

import numpy as np

df['month'] = np.where(df['Month'] == 4, 'April',
                np.where(df['Month'] == 5, 'May',
                np.where(df['Month'] == 6, 'June', 'Other')))

df.head()

import matplotlib.pyplot as plt

df['Audience'].value_counts()

months = df['month'].unique()
months

for month in months:
  monthly = df[df['month']== month]
  count_audience = monthly['Audience'].value_counts()

  plt.figure(figsize=(6,6))
  plt.pie(
      count_audience,
      labels = count_audience.index,
      autopct= '%1.1f%%',
      startangle = 90,
      colors = plt.cm.Pastel1.colors
  )

  plt.title(f'Audience in {month}')
  plt.show()

df_april = df[df['month']== 'April']

count_pur = df_april['Purchase Location'].value_counts()

plt.figure(figsize=(6,6))
plt.pie(
    count_pur,
    labels = count_pur.index,
    autopct= '%1.1f%%',
        startangle = 90,
        colors = plt.cm.Pastel1.colors
    )
plt.title(f'Purchase Location in April')
plt.show()

month_order = ['April', 'May', 'June']

monthly_revenue = df.groupby('month')['Price'].sum().reset_index()
monthly_revenue

# Reindex the monthly_revenue DataFrame to ensure the months are in the correct order
monthly_revenue = monthly_revenue.set_index('month').reindex(month_order).reset_index()

plt.figure(figsize=(8,5))
plt.plot(monthly_revenue['month'], monthly_revenue['Price'], marker = 'o')

plt.title('Monthly Revenue')
plt.xlabel('Month')
plt.ylabel('Revenue')
plt.grid(True, linestyle = '--', alpha = 0.7)
# fix order x-axis
plt.xticks(monthly_revenue['month'])
plt.show()

grouped = df.groupby(['month', 'Audience'])['Price'].sum().reset_index()
grouped

pivot_df = grouped.pivot(index = 'month', columns = 'Audience', values = 'Price')
pivot_df

# Reindex the pivot_df to ensure the months are in the correct order
pivot_df = pivot_df.reindex(month_order)

pivot_df.plot(kind = 'line', marker = 'o', figsize = (10, 6))
plt.title('Revenue by Month and Audience')
plt.xlabel('Month')
plt.ylabel('Revenue')
plt.grid(True)
plt.legend(title = 'Audience')
plt.show()

trend = df.groupby(['month', 'Genre'])['Price'].sum().reset_index()

pivot_genre = trend.pivot(index = 'month', columns = 'Genre', values = 'Price')

month_order = ['April', 'May', 'June']
pivot_df.plot(kind = 'bar', figsize = (10, 6))
plt.title('Revenue by Month and Genre')
plt.xlabel('Month')
plt.ylabel('Revenue')
plt.legend(title = 'Genre')
plt.xticks(rotation=0)
plt.show()

import pandas as pd
import matplotlib.pyplot as plt

# Calculate genre counts
genre_counts = june['Genre'].value_counts()

# Create and display pie chart
plt.figure(figsize=(6, 6))
plt.pie(
    genre_counts,
    labels=genre_counts.index,
    autopct='%1.1f%%',
    startangle=90,
    colors=plt.cm.Pastel1.colors
)
plt.title('Genre Distribution of Books Sold in June')
plt.show()

# Calculate average revenue for May and June
may_june_avg_revenue = [df[df['month'] == 'May']['Price'].mean(), df[df['month'] == 'June']['Price'].mean()]

plt.figure(figsize=(6, 4))
plt.bar([5, 6], may_june_avg_revenue, color='skyblue')
plt.xlabel('Month')
plt.ylabel('Average Revenue ($)')
plt.title('Average Revenue for May and June')
plt.xticks([5, 6], ['May', 'June'])
plt.tight_layout()
plt.show()

# Data for average revenue in May and June
# may_june_avg_revenue = [17.98, 17.37]  # Example values for May and June

# Create the line chart
plt.figure(figsize=(5, 3))
plt.plot([5, 6], may_june_avg_revenue, marker='o', color='blue', linestyle='-', linewidth=2)
plt.xlabel('Month')
plt.ylabel('Average Revenue ($)')
plt.title('Average Revenue for May and June')
plt.xticks([5, 6], ['May', 'June'])
plt.tight_layout()
plt.show()

plt.figure(figsize=(6, 4))
genre_counts.plot(kind='pie', autopct='%1.1f%%', startangle=90, colors=['lavender', 'cyan'])
plt.title('Genre Distribution in June')
plt.ylabel('')  # Hide the y-axis label
plt.tight_layout()
plt.show()

# Reindex the pivot_df to ensure the months are in the correct order
pivot_df = pivot_df.reindex(month_order)

pivot_df.plot(kind = 'line', marker = 'o', figsize = (10, 6))
plt.title('Revenue by Month and Audience')
plt.xlabel('Month')
plt.ylabel('Revenue')
plt.legend(title = 'Audience')
plt.show()

plt.figure(figsize=(6, 4))
plt.bar([5, 6], may_june_avg_revenue, color='skyblue')
plt.xlabel('Month')
plt.ylabel('Average Revenue ($)')
plt.title('Average Revenue for May and June')
plt.xticks([5, 6], ['May', 'June'])
plt.tight_layout()
plt.show()

